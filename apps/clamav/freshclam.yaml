apiVersion: batch/v1
kind: CronJob
metadata:
  name: clamav-update-db
spec:
  schedule: "0 */2 * * *" # Cada 2 horas
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: freshclam
            image: clamav/clamav:latest # Usa la imagen base de ClamAV que uses
            command: ["/bin/sh", "-c"]
            args:
            #-----------------------------------------------------------
            # Descarga de base de datos de virus
            #-----------------------------------------------------------
              - >-
                echo "Attempting to update ClamAV database...";
                freshclam --stdout --datadir=/var/lib/clamav ||
                (echo "Initial freshclam failed, attempting to copy pre-existing defs if any...";
                if [ -d "/var/lib/clamav-temp" ] && [ "$(ls -A /var/lib/clamav-temp)" ]; then
                  echo "Copying existing definitions from temp volume to main volume";
                  cp -R /var/lib/clamav-temp/* /var/lib/clamav/;
                else
                  echo "No pre-existing definitions found in temp volume or freshclam failed definitively.";
                fi);
                  echo "Freshclam process finished."
            env:
              - name: CLAMAV_NO_EXIT_ON_ERROR
                value: "true" # Evita que freshclam falle si no puede notificar
            volumeMounts:
              - name: clamav-data
                mountPath: /var/lib/clamav
              - name: clamav-socket
                mountPath: /var/run/clamav
          volumes:
            - name: clamav-data
              persistentVolumeClaim:
                claimName: clamav-data
            - name: clamav-socket
              persistentVolumeClaim:
                claimName: clamav-socket
            - name: clamav-config
              configMap:
                name: clamav-config
          restartPolicy: OnFailure
