apiVersion: batch/v1
kind: Job
metadata:
  name: nextcloud-proxy-config
  namespace: default # <--- IMPORTANT: Replace with your Nextcloud's actual namespace
spec:
  template:
    spec:
      containers:
      - name: config-updater
        image: nextcloud:31.0.6-apache
        command: ["/bin/bash", "-c"]
        args:
          - |
            CONFIG_FILE="/var/www/html/config/config.php"
            PROXY_IPS_ARRAY=("X.X.X.X" "X.X.X.X") # -- AÑADIR LAS DIRECCIONES IPS DEL INGRESS O/Y NPM ---
            FORWARDED_FOR_HEADERS=("HTTP_X_FORWARDED_FOR" "HTTP_X_REAL_IP")
            PUBLIC_DOMAIN="localhost.test" # -- AÑADIR TU DOMINIO ---

            echo "Añadiendo configuración de proxy a Nextcloud..."

            #-----------------------------------------------------------
            # Asegurar la línea 'trusted_proxies'
            #-----------------------------------------------------------
            PROXY_IPS_PHP_STRINGS=""
            for i in "${!PROXY_IPS_ARRAY[@]}"; do
              PROXY_IPS_PHP_STRINGS="${PROXY_IPS_PHP_STRINGS}    ${i} => '${PROXY_IPS_ARRAY[$i]}',\n"
            done

            sed -i "/'trusted_proxies'/,/),/d" $CONFIG_FILE
            sed -i "/'dbpassword'/a \  'trusted_proxies' => array (\n${PROXY_IPS_PHP_STRINGS}  )," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'overwritehost'
            #-----------------------------------------------------------
            sed -i "/'overwritehost'/d" $CONFIG_FILE
            sed -i "/);/i \  'overwritehost'     => '${PUBLIC_DOMAIN}'," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'overwriteprotocol'
            #-----------------------------------------------------------
            sed -i "/'overwriteprotocol'/d" $CONFIG_FILE
            sed -i "/'overwritehost'/a \  'overwriteprotocol' => 'https'," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'overwritecondaddr'
            #-----------------------------------------------------------
            OVERWRITE_COND_REGEX=""
            for ip in "${PROXY_IPS_ARRAY[@]}"; do
                ESCAPED_IP=$(echo "${ip}" | sed 's/\./\\./g')
                if [ -z "$OVERWRITE_COND_REGEX" ]; then
                    OVERWRITE_COND_REGEX="^${ESCAPED_IP}$"
                else
                    OVERWRITE_COND_REGEX="${OVERWRITE_COND_REGEX}|^${ESCAPED_IP}$"
                fi
            done
            sed -i "/'overwritecondaddr'/d" $CONFIG_FILE
            sed -i "/'overwriteprotocol'/a \  'overwritecondaddr' => '${OVERWRITE_COND_REGEX}'," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'overwrite.cli.url'
            #-----------------------------------------------------------
            sed -i "/'overwrite.cli.url'/d" $CONFIG_FILE
            sed -i "/'overwritecondaddr'/a \  'overwrite.cli.url' => 'https://${PUBLIC_DOMAIN}/'," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'forwarded_for_headers'
            #-----------------------------------------------------------
            sed -i "/'forwarded_for_headers'/d" $CONFIG_FILE
            FORWARDEDS=""
            for i in "${!FORWARDED_FOR_HEADERS[@]}"; do
              FORWARDEDS="${FORWARDEDS}    ${i} => '${FORWARDED_FOR_HEADERS[$i]}',\n"
            done
            sed -i "/'overwrite.cli.url'/a \  'forwarded_for_headers' => array (\n${FORWARDEDS}  )," $CONFIG_FILE

            #-----------------------------------------------------------
            # Añadir 'remote_address_header'
            #-----------------------------------------------------------
            sed -i "/'remote_address_header'/d" $CONFIG_FILE
            sed -i "/);/i \  'remote_address_header' => 'HTTP_X_REAL_IP'," $CONFIG_FILE        

            echo "Configuración de proxy añadida exitosamente."
        envFrom:
          - secretRef:
              name: password-nextcloud
        volumeMounts:
          - name: nextcloud-config
            mountPath: /var/www/html/config
      volumes:
        - name: nextcloud-config
          persistentVolumeClaim:
            claimName: nextcloud-config
      restartPolicy: OnFailure
  backoffLimit: 4
