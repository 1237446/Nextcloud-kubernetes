apiVersion: batch/v1
kind: Job
metadata:
  name: nextcloud-proxy-config
  namespace: default 
spec:
  template:
    spec:
        restartPolicy: OnFailure # Mantiene el pod en caso de fallo
      containers:
      - name: config-updater
        image: nextcloud:31.0.6-apache # Asegúrate de usar la misma imagen que tu Nextcloud
        command: ["/bin/bash", "-c"]
        args:
          - |
            CONFIG_FILE="/var/www/html/config/config.php"
            PROXY_IPS_ARRAY=("X.X.X.X" "X.X.X.X") # -- AÑADIR LAS DIRECCIONES IPS DEL INGRESS O/Y NPM ---
            FORWARDED_FOR_HEADERS=("HTTP_X_FORWARDED_FOR" "HTTP_X_REAL_IP")
            PUBLIC_DOMAIN="localhost.test" # -- AÑADIR TU DOMINIO ---

            echo "Esperando que el archivo config.php de Nextcloud esté disponible..."
            # Asegúrate de que el archivo config.php existe antes de intentar modificarlo
            ATTEMPTS=0
            MAX_ATTEMPTS=30
            while [ ! -f "$CONFIG_FILE" ] && [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
                echo "config.php no encontrado aún, esperando..."
                sleep 5
                ATTEMPTS=$((ATTEMPTS+1))
            done

            if [ ! -f "$CONFIG_FILE" ]; then
                echo "Error: config.php no fue encontrado después de múltiples intentos. Saliendo.."
                exit 1
            fi

            echo "Añadiendo configuración de proxy a Nextcloud..."

            PROXY_IPS_PHP_STRINGS=""
            for i in "${!PROXY_IPS_ARRAY[@]}"; do
              PROXY_IPS_PHP_STRINGS="${PROXY_IPS_PHP_STRINGS}    ${i} => '${PROXY_IPS_ARRAY[$i]}',\n"
            done
            
            echo "Añadir nueva entrada trusted_proxies"
            sed -i "/'trusted_proxies'/,/),/d" $CONFIG_FILE
            sed -i "/'dbpassword'/a \  'trusted_proxies' => array (\n${PROXY_IPS_PHP_STRINGS}  )," $CONFIG_FILE

            echo "Añadir nueva entrada overwritehost"
            sed -i "/'overwritehost'/d" $CONFIG_FILE
            sed -i "/);/i \  'overwritehost'     => '${PUBLIC_DOMAIN}'," $CONFIG_FILE

            echo "Añadir nueva entrada overwriteprotocol"
            sed -i "/'overwriteprotocol'/d" $CONFIG_FILE
            sed -i "/'overwritehost'/a \  'overwriteprotocol' => 'https'," $CONFIG_FILE

            OVERWRITE_COND_REGEX=""
            for ip in "${PROXY_IPS_ARRAY[@]}"; do
                ESCAPED_IP=$(echo "${ip}" | sed 's/\./\\./g')
                if [ -z "$OVERWRITE_COND_REGEX" ]; then
                    OVERWRITE_COND_REGEX="^${ESCAPED_IP}$"
                else
                    OVERWRITE_COND_REGEX="${OVERWRITE_COND_REGEX}|^${ESCAPED_IP}$"
                fi
            done
            echo "Añadir nueva entrada overwritecondaddr"
            sed -i "/'overwritecondaddr'/d" $CONFIG_FILE
            sed -i "/'overwriteprotocol'/a \  'overwritecondaddr' => '${OVERWRITE_COND_REGEX}'," $CONFIG_FILE

            echo "Añadir nueva entrada overwrite.cli.url"
            sed -i "/'overwrite.cli.url'/d" $CONFIG_FILE
            sed -i "/'overwritecondaddr'/a \  'overwrite.cli.url' => 'https://${PUBLIC_DOMAIN}/'," $CONFIG_FILE

            FORWARDEDS=""
            for i in "${!FORWARDED_FOR_HEADERS[@]}"; do
              FORWARDEDS="${FORWARDEDS}    ${i} => '${FORWARDED_FOR_HEADERS[$i]}',\n"
            done
            echo "Añadir nueva entrada forwarded_for_headers"
            sed -i "/'forwarded_for_headers'/d" $CONFIG_FILE
            sed -i "/'overwrite.cli.url'/a \  'forwarded_for_headers' => array (\n${FORWARDEDS}  )," $CONFIG_FILE

            echo "Añadir nueva entrada remote_address_header"
            sed -i "/'remote_address_header'/d" $CONFIG_FILE
            sed -i "/);/i \  'remote_address_header' => 'HTTP_X_REAL_IP'," $CONFIG_FILE        

            echo "Configuración de proxy añadida exitosamente."
        envFrom:
          - secretRef:
              name: password-nextcloud
        volumeMounts:
          - name: nextcloud-config
            mountPath: /var/www/html/config
      volumes:
        - name: nextcloud-config
          persistentVolumeClaim:
            claimName: nextcloud-config
      restartPolicy: OnFailure
  backoffLimit: 4
